.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "IF" "1" "June 2018" "" ""
.
.SH "NAME"
\fBif\fR \- testa e executada alguma função
.
.SH "NOME"
if \- realiza um teste e pode executar algo caso verdade ou falso\.
.
.SH "SYNOPSIS"
\fBif\fR [\fB\-bar\fR] [\fB\-c\fR \fIconfig\-file\fR ] \fIfile\fR \.\.\.
.
.SH "DESCRIÇÃO"
\fBif\fR é uma ferramenta do shell para teste de condições, em caso de verdadeiro ele executa alguma função\.
.
.SH "OPÇÕES"
.
.IP "\(bu" 4
\fB\-n\fR: Non\-zero \-> Testar se a variável existe, se nao é nulo [NOT NULL]\.
.
.IP "\(bu" 4
\fB\-z\fR: Verifica se a variável foi setada, pode até ser vazia\.
.
.IP "\(bu" 4
\fB\-e\fR: Verifica se o \fIarquivo\fR existe\.
.
.IP "\(bu" 4
\fB\-d\fR: Verifica se o diretório existe\.
.
.IP "\(bu" 4
\fB\-eq\fR: igual
.
.IP "\(bu" 4
\fB\-ne\fR: diferente
.
.IP "\(bu" 4
\fB\-gt\fR: maior
.
.IP "\(bu" 4
\fB\-ge\fR: maior ou igual
.
.IP "\(bu" 4
\fB\-lt\fR: menor
.
.IP "\(bu" 4
\fB\-le\fR: menor ou igual
.
.IP "\(bu" 4
\fB\-d\fR: se é um diretório que existe\.
.
.IP "\(bu" 4
\fB! \-d\fR: se esse diretório nao existe\.
.
.IP "\(bu" 4
\fB\-e\fR: se existe
.
.IP "\(bu" 4
\fB\-z\fR: se é vazio
.
.IP "\(bu" 4
\fB\-f\fR: se contem texto\.
.
.IP "\(bu" 4
\fB\-r\fR: se o arquivo possui permissão de leitura
.
.IP "\(bu" 4
\fB\-w\fR: se o arquivo possui permissão de escrita\.
.
.IP "\(bu" 4
\fB\-x\fR: se o arquivo é executavel\.
.
.IP "" 4
.
.nf

 \-b FILE
        FILE exists and is block special

 \-c FILE
        FILE exists and is character special

 \-d FILE
        FILE exists and is a directory

 \-e FILE
        FILE exists

 \-f FILE
        FILE exists and is a regular file

 \-g FILE
        FILE exists and is set\-group\-ID

 \-G FILE
        FILE exists and is owned by the effective group ID

 \-h FILE
        FILE exists and is a symbolic link (same as \-L)

 \-k FILE
        FILE exists and has its sticky bit set

 \-L FILE
        FILE exists and is a symbolic link (same as \-h)

 \-O FILE
        FILE exists and is owned by the effective user ID

 \-p FILE
        FILE exists and is a named pipe

 \-r FILE
        FILE exists and read permission is granted

 \-s FILE
        FILE exists and has a size greater than zero

 \-S FILE
        FILE exists and is a socket

 \-t FD  file descriptor FD is opened on a terminal

 \-u FILE
        FILE exists and its set\-user\-ID bit is set

 \-w FILE
        FILE exists and write permission is granted

 \-x FILE
        FILE exists and execute (or search) permission is granted
.
.fi
.
.IP "" 0

.
.IP "" 0
.
.SH "EXAMPLES"
Comparando uma variável se está vazia\.
.
.IP "" 4
.
.nf

`if [ \-n $USER ]; then

    echo "Sou o:$USER"
else
    echo "Não sou ninguém"
fi`

   `if [ \-z "$1" ]                           # Is parameter #1 zero length?
.
.fi
.
.IP "" 0
.
.P
`then echo "\-Parameter #1 is zero length\.\-" # Or no parameter passed\. else echo "\-Parameter #1 is \e"$1\e"\.\-" fi
.
.P
variable=${1\-$DEFAULT} # What does echo "variable = $variable" #+ parameter substitution show? # \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- # It distinguishes between #+ no param and a null param\.`
.
.P
\fBif [ "$2" ] then echo "\-Parameter #2 is \e"$2\e"\.\-" fi\fR
.
.P
Procurar uma string dentro de outra string, igual no case so que lá usa POSIX\.
.
.P
`#!/bin/bash CURRENT_DIR=$(pwd)
.
.P
if [[ "$CURRENT_DIR" =~ "String1" ]] then echo "String1 present" elif [[ "$CURRENT_DIR" =~ "String2" ]] then echo "String2 present" else echo "Else" fi`
.
.SH "NOTES"
Comparisons: \-eq equal to \-ne not equal to \-lt less than \-le less than or equal to \-gt greater than \-ge greater than or equal to
.
.P
File Operations: \-s file exists and is not empty \-f file exists and is not a directory \-d directory exists \-x file is executable \-w file is writable \-r file is readable
.
.SH "AUTOR"
Rafael Quirino \- \fIquirinobytes (a) gmail com\fR
.
.SH "VEJA SOBRE"
ronn(5), markdown(1), txt2tags(1) Linux Man Page Howto \fIhttp://www\.schweikhardt\.net/man_page_howto\.html\fR
