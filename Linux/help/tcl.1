.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "TCL" "1" "March 2017" "" ""
.
.SH "NAME"
\fBtcl\fR \- Traffic Control libraries
.
.SH "SYNOPSIS"
\fBtcl\fR [\fB\-bar\fR] [\fB\-c\fR \fIconfig\-file\fR ] \fIfile\fR \.\.\.
.
.SH "DESCRIÇÃO"
\fBtcl\fR é uma linguagem de programação para se trabalhar com trafego de dados\.
.
.SH "OPÇÕES"
\fIDeclarar variaveis se nao existir ainda\fR \fBset TMPDIR "/tmp" if { [info exists ::env(TMP)] } { set TMPDIR $::env(TMP) }\fR
.
.P
\fIImprimir o resultado da saida do ultimo comando\fR \fBputs $expect_out(buffer)\fR
.
.P
\fIDefinnindo uma variável\fR
.
.P
set greeting hello set greeting ;# \->hello set person(name) bob set person(name) ;#\-> bob set (name) bob ;# the is an array variable, where the array name is the empty string set (name) ;#\-> bob set {} hello set {} ;#\->hello
.
.P
\fIif\fR \fBif { $count < 0} { puts "True : $count\en"; } else { puts "False : $count\en"; }\fR
.
.P
\fIMATH FUNCTIONS\fR
.
.P
Tcl supports the following mathematical functions in expressions:
.
.P
abs acos asin atan atan2 bool ceil cos cosh double entier exp floor fmod hypot int isqrt log log10 max min pow rand round sin sinh sqrt srand tan tanh wide
.
.P
\fITYPE CONVERSIONS\fR
.
.P
Tcl supports the following functions to convert from one representation of a number to another:
.
.P
double int wide entier double() converts a number to a floating\-point number\. int() converts a number to an ordinary integer number (by truncating the decimal part)\. wide() converts a number to a so\-called wide integer number (these numbers have a larger range)\. entier() coerces a number to an integer of appropriate size to hold it without truncation\. This might return the same as int() or wide() or an integer of arbitrary size (in Tcl 8\.5 and above)\.
.
.SH "EXEMPLOS"
\fIUsando expressoes matematicas\fR `set X 100 set Y 256 set Z [expr {$Y + $X}] set Z_LABEL "$Y plus $X is "
.
.P
puts "$Z_LABEL $Z" puts "The square root of $Y is [expr { sqrt($Y) }]\en"
.
.P
puts "Because of the precedence rules \e"5 + \-3 * 4\e" is: [expr {\-3 * 4 + 5}]" puts "Because of the parentheses \e"(5 + \-3) * 4\e" is: [expr {(5 + \-3) * 4}]"
.
.P
set A 3 set B 4 puts "The hypotenuse of a triangle: [expr {hypot($A,$B)}]"
.
.P
## set pi6 [expr {3\.1415926/6\.0}] puts "The sine and cosine of pi/6: [expr {sin($pi6)}] [expr {cos($pi6)}]"`
.
.P
## set a(1) 10 set a(2) 7 set a(3) 17 set b 2 puts "Sum: [expr {$a(1)+$a($b)}]"
.
.SH "ARQUIVOS"
\fISHA\-BANG\fR #!/usr/bin/expect
.
.SH "ENVIRONMENT"
\fBFOOCONF\fR If non\-null the full pathname for an alternate system wide \fI/etc/foo\.conf\fR\. Overridden by the \fB\-c\fR option\.
.
.SH "DIAGNOSTICS"
The following diagnostics may be issued on stderr:
.
.P
\fBBad magic number\.\fR The input file does not look like an archive file\.
.
.P
\fBOld style baz segments\.\fR \fBfoo\fR can only handle new style baz segments\. COBOL object libraries are not supported in this version\.
.
.SH "COMENTARIOS"
\fIevoluindo com set dentro do ""\fR \fBset var1 3\.14159 set var2 hello set var3 13 foreach num {1 2 3} { puts "var$num = [set var$num]" } output: var1 = 3\.14159 var2 = hello var3 = 13\fR
.
.SH "BUGS"
The command name should have been chosen more carefully to reflect its purpose\.
.
.SH "AUTOR"
Rafael Quirino \- \fIquirinobytes (a) gmail com\fR
.
.SH "VEJA SOBRE"
ronn(5), markdown(1), txt2tags(1) Linux Man Page Howto \fIhttp://www\.schweikhardt\.net/man_page_howto\.html\fR
